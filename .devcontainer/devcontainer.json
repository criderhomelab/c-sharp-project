{
    // This should be the published version of ../devcontainers/builder/
    "name": "dotnet-dev",

    // Image was for internal development, but for transparency I have provided a build that emulates my devcontainer
    //"image": "ghcr.io/timcrider/devcontainers/dotnet-amd64:0.1.0",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },

    "customizations": {
        "vscode": {
            "extensions": [
                "pomdtr.excalidraw-editor", // Excalidraw editor
                "github.copilot", // Copilot code assist
                "github.copilot-chat", // Copilot chat
                "esbenp.prettier-vscode", // Prettier code formatter
                "bierner.color-info", // JSX and CSS color information
                "jpoissonnier.vscode-styled-components", // Styled components
                "ms-azuretools.vscode-docker", // Docker integration and linting
                "shardulm94.trailing-spaces", // Show trailing spaces
                "vscode-icons-team.vscode-icons", // Better file extension icons

// DotNet
                "ms-dotnettools.csharp",
                "ms-dotnettools.csdevkit",
                "ms-dotnettools.dotnet-interactive-vscode",
                "jebbs.plantuml",
                "Ionide.Ionide-fsharp",
                "ms-dotnettools.vscode-dotnet-runtime",
                "ms-azuretools.vscode-containers"

            ],
            "settings": {
                "files.eol": "\n",
                "editor.tabSize": 2
            }
        }
    },

    "features": {
        // Docker Outside of Docker (DooD) - RECOMMENDED for Apple Silicon
        // Uses the host's Docker daemon directly, avoiding nested containerization issues.
        // Better performance and compatibility with Docker Desktop on macOS.
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
            "version": "latest",
            "installDockerBuildx": true
        },
        
        // Docker in Docker (DinD) - COMMENTED OUT due to Apple Silicon issues
        // Runs a separate Docker daemon inside the container. Can cause "broken pipe" 
        // errors on Apple Silicon due to runc runtime conflicts with nested containers.
        // Uncomment below and comment out docker-outside-of-docker if needed for specific use cases.
        // "ghcr.io/devcontainers/features/docker-in-docker:2": {
        //     "version": "latest",
        //     "dockerDashComposeVersion": "v2",
        //     "installDockerBuildx": true
        // },
        
        "ghcr.io/devcontainers/features/git:1": {"version": "latest"},
//        "ghcr.io/devcontainers/features/github-cli:1": {"version": "latest"},
//        "ghcr.io/devcontainers/features/go:1": {"version": "latest"},
        "ghcr.io/devcontainers/features/python:1": {"version": "os-provided"},
        "ghcr.io/devcontainers/features/node:1": {"version": "lts"}
    },

    "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces,type=bind",
    "workspaceFolder": "/workspaces",
    "remoteUser": "root",
    "remoteEnv": {
        "PATH": "${containerEnv:PATH}:${containerWorkspaceFolder}/bin",
        "DOCKER_BUILDKIT": "1",
        "COMPOSE_DOCKER_CLI_BUILD": "1",
        "DOCKER_DEFAULT_PLATFORM": "linux/amd64"
    },
    // Additional settings for Apple Silicon compatibility
    "runArgs": [
        "--privileged"
    ],

    // Post-create command to configure Docker for Apple Silicon
    "postCreateCommand": "bash -c 'echo \"Configuring Docker for Apple Silicon compatibility...\" && docker --version && echo \"export DOCKER_DEFAULT_PLATFORM=linux/amd64\" >> ~/.bashrc'"
}