
services:
  frontend:
    build:
      context: ../../
      target: final
    env_file:
      - ../../.local
    environment:
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - DOTNET_SYSTEM_NET_DISABLEIPV6=true
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      mssql:
        condition: service_healthy
      mssql-setup:
        condition: service_completed_successfully

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "127.0.0.1:1433:1433"
    env_file:
      - ../../.local
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=1433
      - MSSQL_IP_ADDRESS=0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S 127.0.0.1 -U sa -P $${SA_PASSWORD} -No -C -Q 'SELECT 1' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    volumes:
      - mssql_data:/var/opt/mssql

  mssql-setup:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      mssql:
        condition: service_healthy
    env_file:
      - ../../.local
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - ./mssql/setup_robust.sh:/setup_robust.sh:ro
    command: >
      bash -c "
        chmod +x /setup_robust.sh
        /setup_robust.sh
      "
    restart: "no"

volumes:
  mssql_data:

networks:
  default:
    enable_ipv6: false
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

