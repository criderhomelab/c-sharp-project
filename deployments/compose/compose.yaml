# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: ../../
      target: final
    environment:
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - ConnectionStrings__DefaultConnection=Server=db;Database=WebAppDB;User Id=WebAppUser;Password=WebApp_Password_123!;TrustServerCertificate=true;
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
      db-setup:
        condition: service_completed_successfully
        
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Your_Password_123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
      - ./init-db.sql:/tmp/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Your_Password_123! -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      
  db-setup:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./init-db.sql:/tmp/init-db.sql:ro
    command: |
      bash -c "
      echo 'Waiting for SQL Server to be ready...';
      sleep 10;
      echo 'Testing connection to SQL Server...';
      /opt/mssql-tools18/bin/sqlcmd -S db -U sa -P Your_Password_123! -C -Q 'SELECT @@VERSION' -o /tmp/version.txt;
      if [ \$$? -eq 0 ]; then
        echo 'Connection successful! Running database initialization...';
        /opt/mssql-tools18/bin/sqlcmd -S db -U sa -P Your_Password_123! -C -i /tmp/init-db.sql -o /tmp/init-output.txt;
        if [ \$$? -eq 0 ]; then
          echo 'Database initialization completed successfully!';
          cat /tmp/init-output.txt;
        else
          echo 'Database initialization failed!';
          cat /tmp/init-output.txt;
          exit 1;
        fi;
      else
        echo 'Failed to connect to SQL Server!';
        cat /tmp/version.txt;
        exit 1;
      fi;
      "
    restart: "no"

volumes:
  mssql-data:
